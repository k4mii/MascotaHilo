package autonoma.mascotahilo.ui;

import autonoma.mascotahilo.elements.Pet;
import autonoma.mascotahilo.elements.World;
import gamebase.elements.GraphicContainer;
import java.awt.Graphics;
import java.awt.Rectangle;

/**
 *
 * @author Kamii
 */
public class GameWindow extends javax.swing.JFrame implements GraphicContainer{
    private World world;
    /**
     * Creates new form GameWindow
     */
    public GameWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        world.getPet().setTarget(evt.getX(), evt.getY());
    }//GEN-LAST:event_formMouseMoved
    public void setWorld(World world) {
        this.world = world;
    }
    @Override
    public void paint(Graphics g) {
        super.paint(g); 
    
        if(world != null)
            world.paint(g);
    }

    @Override
    public void refresh() {
        this.repaint();
    }

    @Override
    public Rectangle getBoundaries() {
        return this.getBounds();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
